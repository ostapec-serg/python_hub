import requestsimport datetimefrom time import sleepdef exchange():    def validate_date(d):        try:            time_for_now = datetime.date.today()            date = datetime.datetime.strptime(d, "%d.%m.%Y").date()            if len(d) == 10 and (date <= time_for_now):                return True            else:                return False        except ValueError:            return False    def excange_req():        print(f"\nКурс валют доступен для:\n"              f"USD - доллар США:      1     EUR - евро:    2\n"              f"RUR - росийский рубль: 3     BTC - биткоин: 4\n"              f"Просмотреть все доступныке курсы - 5\n")        oper = int(input("Введите номер операции:\n"))        try:            response = requests.get('https://api.privatbank.ua/p24api/'                                    'pubinfo?exchange&json&coursid=11')            privat_app = response.json()            if response.ok and (privat_app is not []):                if oper == 1:                    for i in privat_app:                        if i['ccy'] == 'USD':                            print(f"{i['ccy']}\nПокупка - {round(float(i['buy']), 2)} UAH\n"                                  f"Продажа - {round(float(i['sale']), 2)} UAH\n")                elif oper == 2:                    for i in privat_app:                        if i['ccy'] == 'EUR':                            print(f"{i['ccy']}\nПокупка - {round(float(i['buy']), 2)} UAH\n"                                  f"Продажа - {round(float(i['sale']), 2)} UAH\n")                elif oper == 3:                    for i in privat_app:                        if i['ccy'] == 'RUR':                            print(f"{i['ccy']}\nПокупка - {round(float(i['buy']), 2)} UAH\n"                                  f"Продажа - {round(float(i['sale']), 2)} UAH\n")                elif oper == 4:                    for i in privat_app:                        if i['ccy'] == 'BTC':                            print(f"{i['ccy']}\nПокупка - {round(float(i['buy']), 2)} USD\n"                                  f"Продажа - {round(float(i['sale']), 2)} USD\n")                elif oper == 5:                    for i in privat_app:                        if i['ccy'] != 'BTC':                            print(f"{i['ccy']}\nПокупка - {round(float(i['buy']), 2)} UAH\n"                                  f"Продажа - {round(float(i['sale']), 2)} UAH\n")                        else:                            print(f"{i['ccy']}\nПокупка - {round(float(i['buy']), 2)} USD\n"                                  f"Продажа - {round(float(i['sale']), 2)} USD\n")                else:                    print("\nНе верный формат!\n")        except requests.exceptions.Timeout:            print("Вероятно сервер болеет, можно попробовать ретрай через N секунд")        except requests.exceptions.TooManyRedirects:            print("Вероятно некорректный URL")        except requests.ConnectionError:            print("Нет соединения с сервером")    def archive_currency():        print(f"Список кодов доступных валют:\n"              f"RUB CAD CNY CZK  PLN EUR GBP BYN JPY KZT MDL USD UAH \n"              f"Для выбора валюты код валюты\n")        cur_list = ['RUB', "CAD", 'CNY', 'CZK', 'PLN', 'EUR',                    'GBP', 'BYN', 'JPY', 'KZT', 'MDL', 'USD', 'UAH']        input_currency = input("Введите код валюты:\n").upper()        if input_currency in cur_list:            input_date = input("Введите дату курса в формате (01.12.2014):\n")            if validate_date(input_date):                time_for_now = datetime.date.today()                date = datetime.datetime.strptime(input_date, "%d.%m.%Y").date()                last_value = []                try:                    while date <= time_for_now:                        formated_day = date.strftime("%d.%m.%Y")                        url = f'https://api.privatbank.ua/p24api/exchange_rates?json&date={formated_day}'                        response = requests.get(url)                        dict_list = response.json()["exchangeRate"]                        if response.ok and dict_list is not []:                            for value in dict_list:                                if value.get("currency") == input_currency:                                    currensy = value.get("currency")                                    print_rate = value.get("saleRateNB")                                    print(f"{formated_day}\n"                                          f"{currensy}-{print_rate}\n")                                    last_value = []                                    last_value.append(currensy)                                    last_value.append(print_rate)                            delta = datetime.timedelta(days=1)                            date = (date + delta)                        else:                            print(f'{last_value[0]}\n'                                  f'{last_value[1]}')                        sleep(0.5)                except requests.exceptions.Timeout:                    print("Сервер не отвечает, попробуйте позже!")                except requests.exceptions.TooManyRedirects:                    print("Вероятно некорректный URL")                except requests.ConnectionError:                    print("Нет соединения с сервером")            else:                print("Не правильный формат даты")        else:            print(f"Не правильный формат кода валюты")    def convert():        try:            print(f"Список кодов доступных валют:\n"                  f"RUB CAD CNY CZK  PLN EUR GBP BYN JPY KZT MDL USD UAH \n"                  f"Для выбора валюты введите код валюты\n")            chek_currency = ['RUB', "CAD", 'CNY', 'CZK', 'PLN', 'EUR',                             'GBP', 'BYN', 'JPY', 'KZT', 'MDL', 'USD', 'UAH']            input_currency = input("Введите валюту которую хотие конвертировать:\n").upper()            if input_currency in chek_currency:                input_currency_value = abs(int(input(f"Склько {input_currency} вы хотите конвертировать?\n")))                output_currency = input("Введите валюту в которую хотие конвертировать:\n").upper()                if output_currency in chek_currency:                    input_date = datetime.date.today().strftime("%d.%m.%Y")                    url = f'https://api.privatbank.ua/p24api/exchange_rates?json&date={input_date}'                    response = requests.get(url)                    data_dicts = response.json()['exchangeRate']                    if response.ok and (data_dicts is not []):                        first_rate = 0.0                        second_rate = 0.0                        for i in data_dicts:                            if i.get("currency") == input_currency:                                first_rate = i.get("purchaseRateNB")                        for i in data_dicts:                            if i.get("currency") == output_currency:                                second_rate = i.get("saleRateNB")                        result = round((input_currency_value * first_rate) / second_rate, 2)                        print(f"{input_currency_value}{input_currency} = {result}{output_currency}")                    else:                        print("Сбой! Данных не обнаружено."                              "Попробуйте через несколько минут!")                else:                    print("\nНе верный код валюты\n")            else:                print("\nНе верный код валюты\n")        except requests.exceptions.Timeout:            print("Сервер не отвечает, попробуйте позже")        except requests.exceptions.TooManyRedirects:            print("Вероятно некорректный URL")        except requests.ConnectionError:            print("Нет соединения с сервером")        except ValueError:            print("\nНе верный формат суммы для конвертации!\n")    def main_menu():        loop_operation = True        while loop_operation:            print(f"Курс валют - 1\n"                  f"Архив курсов валют от 01.12.2014 - 2\n"                  f"Конвертер валют - 3\n"                  f"Назад - 0\n")            try:                operation = int(input("Введите номер операции:\n"))                if 0 <= operation <= 3:                    if operation == 1:                        excange_req()                    elif operation == 2:                        archive_currency()                    elif operation == 3:                        convert()                    elif operation == 0:                        loop_operation = False                else:                    print("Не верная операция!\n")            except ValueError:                print("Не верная операция!\n")            except TypeError:                print("Не верная операция!\n")        return    main_menu()