import csvimport jsonfrom time import sleepimport ATMdef user_balance(name):    with open(f"Balance/{name}_balance.data.csv",              encoding="utf-8") as file:        reade_file = csv.reader(file)        for row in reade_file:            balance = row[0]        sleep(0.2)        return int(balance)def withdraw_cash(name):    my_balance = user_balance(name)    depo = abs(int(input("Введите сумму для снятия:\n")))    if depo < my_balance and (my_balance + depo) > 0:        if ATM.atm_cash() > depo:            withdraw_dict = ATM.withdraw(depo)            if with_dict(withdraw_dict) == True:                ATM.withdraw_banknote(withdraw_dict, ATM.remainder())                new_balance = my_balance - depo                with open(f"Balance/{name}_balance.data.csv", mode="w",                          encoding="utf-8", newline="") as file:                    writer = csv.writer(file, delimiter=",")                    writer.writerow([new_balance])                transaction = json.dumps({"Operation": "Deposite",                                          "Status": "Success",                                          "Balance": f"{new_balance}"})                transaction = json.loads(str(transaction))                with open(f"Transactions/{name}_transactions.data.json", "a",                          encoding="utf-8") as file:                    json.dump(transaction, file, indent=4)                return depo, new_balance            else:                print(f"Банкомат не может выдать выбраную сумму\n"                      f"Выберете с доступных номиналов\n{ATM.balance_banknotes()}"                      f"\nНОУ МАНИ - НОУ ХАНИ\n")        else:            print(f"Недостаточно денег в банкомате!\n"                  f"Поапробуйте позже!\n")            return False    else:        print(f"Недостаточно денег на счету!\n"              f"На Вашем счету {user_balance(name)}")        return Falsedef deposite(name):    my_balance = user_balance(name)    depo = abs(int(input("Введите сумму вложения:\n")))    new_balance = my_balance + depo    with open(f"Balance/{name}_balance.data.csv", "w",              encoding="utf-8") as file:        writer = csv.writer(file, delimiter=",")        writer.writerow([new_balance])    transaction = json.dumps({"Operation": "Deposite",                              "Status": "Success",                              "Balance": f"{new_balance}"})    transaction = json.loads(str(transaction))    with open(f"Transactions/{name}_transactions.data.json", "a",              encoding="utf-8") as file:        json.dump(transaction, file, indent=4)    return depo, new_balancedef with_dict(another):    with open("Banknote.data.json", "r", encoding="utf-8") as file:        file_content = file.read()        templates = json.loads(file_content)        banknotes = {}        for k, v in templates.items():            banknotes[int(k)] = v        bool_val = False        for key in another:            if another[key] <= banknotes[key]:                bool_val = (True)            else:                return False        return True