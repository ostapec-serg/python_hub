import csvfrom time import sleepimport ATMimport user_funcdef geekbank():    def validator():        i = 3        while i != 0:            name = input("Введите имя пользователя:\n")            pin = input("Введите пин-код:\n")            with open('users.data.csv', mode='r', encoding='utf-8') as users:                users_list = csv.reader(users)                permision_list = [row for row in users_list]                if [name, pin, 'False'] in permision_list:                    sleep(0.3)                    user_menu(name)                elif [name, pin, 'True'] in permision_list:                    admin_menu(name)                else:                    i -= 1                    print("Не правильные имя пяльзователя или пароль!\n"                          ""                          f"Осталось {i} попыток\n")                    sleep(0.5)        exit_bank()    def user_menu(name):        while True:            try:                print("Выберете оперецию:\n"                      "Для просмотра баланса, нажмите - 1\n"                      "Для снятия денег, нажмите - 2\n"                      "Для пополнение счета, нажмите - 3\n"                      "Для выхода, нажмите - 0\n")                operation_num = int(input("Введите номер операции:\n"))                if 0 <= operation_num <= 3:                    if operation_num == 1:                        sleep(0.3)                        print(f"{name} у Вас на счету "                              f"{user_func.user_balance(name)} USD!\n")                    elif operation_num == 2:                        sleep(0.3)                        raw = user_func.withdraw_cash(name)                        if not raw:                            pass                        else:                            print(f"{name} Вы сняли со счета {raw[0]}, на "                                  f"счету {user_func.user_balance(name)} USD!\n")                    elif operation_num == 3:                        sleep(0.3)                        raw = user_func.deposite(name)                        print(f"{name} Вы положили на счет {raw[0]}, на "                              f"счету {user_func.user_balance(name)} USD!\n")                    elif operation_num == 0:                        sleep(0.3)                        print(exit_bank())                        break                else:                    sleep(0.3)                    print("Не верная операция!\n")            except Exception:                print("Invalid Value")    def admin_menu(name):        while True:            print("Выберете оперецию:\n"                  "Для просмотра количества купюр, нажмите - 1\n"                  "Изменить количество купюр - 2\n"                  "Переход в меню пользователя - 3\n"                  "Закончить работу с банкоматом, нажмите - 0\n"                  "\n"                  "ПРИ ПЕРЕХОДЕ В МЕНЮ ПОЛЬЗОВАТЕЛЯ ВЫ ВЫХОДИТЕ С УЧЕТНОЙ ЗАПИСИ АДМИНИСТРАТОРА!\n"                  "ДЛЯ ПЕРЕХОДА В МЕНЮ АДМИНИСТРАТОРА НУЖНА ПОВТОРНАЯ АВТОРИЗАЦИЯ!")            operation_num = int(input("Введите номер операции:\n"))            if 0 <= operation_num <= 3:                if operation_num == 1:                    sleep(0.3)                    print(ATM.balance_banknotes())                elif operation_num == 2:                    print("Выберете оперецию:\n"                          "Добавить купюр, нажмите - 1\n"                          "Изьять купюры, нажмите - 2\n")                    operation = int(input("Введите номер операции:\n"))                    if operation == 1:                        sleep(0.3)                        print(update_atm(operation))                    elif operation == 2:                        sleep(0.3)                        print(update_atm(operation))                    elif operation_num == 0:                        sleep(0.3)                        print(admin_menu(name))                    else:                        sleep(0.3)                        print("Не верная операция!\n")                elif operation_num == 3:                    sleep(0.3)                    print(user_menu(name))                elif operation_num == 0:                    sleep(0.3)                    print(exit_bank())                    break                else:                    sleep(0.3)                    print("Не верная операция!\n")                    pass    def update_atm(oper):        income = ATM.note_amount()        old_cash = ATM.remainder()        if oper == 2:            new_balance = ATM.withdraw_banknote(income, old_cash)        else:            new_balance = ATM.new_banknote(income, old_cash)        return new_balance    def exit_bank():        return f"*** Спасибо за использование GeegHub-Bank ***\n"\               "*** Хорошего дня и не забывайте улыбаться! ***"    print("*** Добро пожаловать в GeekHub-Bank ***")    sleep(0.5)    validator()geekbank()