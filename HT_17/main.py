from selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as ECclass GoogleForm:    """    class for automatic filling of google forms    ...    Attributes    username: str        username to be written in the form    screen_num: int        number of screenshot    url: str        link to google form    option: ChromeOptions() object        add some option to webdriver.Chrome    driver: webdriver.Chrome() object        to automate web browser actions    Methods    open_close_form        Method for open and close g_form    _form_input        Method for filling out the form.        protected method    _made_save_screenshot        The method takes and saves screenshots        protected method    """    def __init__(self):        """        """        self.username = "Ostapec Sergii"  # input('Insert name for form: ')        self.screen_num = 1        self.url = 'https://docs.google.com/forms/d/e/' \                   '1FAIpQLScLhHgD5pMnwxl8JyRfXXsJekF8_pDG36XtSEwaGsFdU2egyw/viewform?pli=1'        self.option = webdriver.ChromeOptions()        self.option.add_argument("--no-sandbox")        self.driver = webdriver.Chrome(options=self.option,                                       executable_path="/Users/sergiiostapec/"                                       "Programming/GeekHub/"                                       "Project's/HT_17/chromedriver")    def open_close_form(self):        """        Method open google form, call _form input method and close form        :return:        """        try:            self.driver.get(url=self.url)            self._form_input()        except Exception as ex:            print(ex)        finally:            self.driver.close()            self.driver.quit()    def _form_input(self):        """        The method automatically checks if the field and the "Submit" button        are available and fills the form (the input field is        filled with the value of the class attribute - name_for_form)        and click submit button.        :return:        """        input_data = self.driver.find_element(            By.CSS_SELECTOR, "div > input[type='text']")        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable(            (By.CSS_SELECTOR, "div > input[type='text']")))        input_data.send_keys(self.username)        self._made_save_screenshot()        button = self.driver.find_element(            By.CSS_SELECTOR, "div > span.exportButtonContent")        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable(            (By.CSS_SELECTOR, "div > span.exportButtonContent")))        button.click()        self._made_save_screenshot()    def _made_save_screenshot(self):        """        The method makes, saves screenshots and increments the        screenshot number(class attribute - screen_num) by 1        :return:        """        self.driver.save_screenshot(f"{self.username}_screenshot_â„–{self.screen_num}.png")        self.screen_num += 1if __name__ == "__main__":    connect = GoogleForm()    connect.open_close_form()